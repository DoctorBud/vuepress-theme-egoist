(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{163:function(t,s,n){"use strict";n.r(s);var a={props:["target"]},e=n(17),r=Object(e.a)(a,function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("于是小明告诉我他绞尽脑汁想到的几个方法:")]),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("以上方法都是可行的，但是一旦组件逻辑复杂起来这样的回调啊、绑定啊、同步啊都会乱套。")]),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("于是出现了 Redux !")]),t._v(" "),n("p",[t._v("当然，Redux 不是为 Vue 出现的。不过却成为了解决所有 JavaScript 应用中状态管理的一种方案。")]),t._v(" "),n("p",[t._v("我能做的关于 Redux 的介绍就是这样，了解更多请阅读官方"),n("a",{attrs:{href:"https://github.com/rackt/redux",target:"_blank",rel:"noopener noreferrer"}},[t._v("自述"),n("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("也许你现在知道了 Redux 最初是因为 React 这个 View Layer Framework 而生的，React 和 Vue 一样具有组件系统，需要状态管理。")]),t._v(" "),n("p",[t._v("那么就把 Redux 应用到 Vue 中来吧?")]),t._v(" "),n("p",[t._v("你可以这么做，也可以使用 Vue 官方的 Flux 实现 "),n("a",{attrs:{href:"https://github.com/vuejs/vuex",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex"),n("OutboundLink")],1),t._v("，它和 Redux 非常类似。几乎唯一的区别就是你需要在 action 里直接修改状态。这很好，因为 Vue 本身赞成的是 mutable state。而 Redux 中则是推荐不要修改状态而是返回一个新的状态，选择哪种看你习惯哪种。")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("Redux 在 React 中的应用是通过 "),n("a",{attrs:{href:"https://github.com/rackt/react-redux",target:"_blank",rel:"noopener noreferrer"}},[t._v("React-Redux"),n("OutboundLink")],1),t._v(" 来绑定的，显得十分复杂。在 Vue 中绑定 Redux 却是十分的简单：")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("相关链接:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/rackt/redux",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/egoist/revue",target:"_blank",rel:"noopener noreferrer"}},[t._v("Revue"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/vuejs/vuex",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex"),n("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"缘起小明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缘起小明","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("span",[this._v("缘起小明")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("前几天小明找到我，说他想用 Vue 做一个小博客，自己写点东西，可是一来就遇到问题了，他发现组件之间的状态传递十分麻烦。父子组件还好点，在 Vue 里面可以用 "),s("code",[this._v("props")]),this._v(" 执行函数或者 "),s("code",[this._v("this.$broadcast")]),this._v(" "),s("code",[this._v("this.$dispatch")]),this._v(" 来传递状态，可是两个完全没有联系的组件要共享状态十分困难啊。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("他是这样说的，他在做编辑器的时候侧边栏和编辑框都想知道用户"),s("strong",[this._v("是否已经保存")]),this._v("这个状态， 而这两个组件完全没办法通过上述的几个方法共享 state。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("把这个状态放到这两个组件共同的父组件中然后通过 "),s("code",[this._v("prop.sync")]),this._v(" 来同步这两个组件的这个状态")]),this._v(" "),s("li",[this._v("在这两个组件中都放置这个状态然后通过共同父组件的一个 prop 来在父组件中调用函数执行一个 "),s("code",[this._v("this.$dispatch")]),this._v(" 通知子组件这个状态有改动，借此来同步各个组件中的这个状态。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"历史必然"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#历史必然","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("span",[this._v("历史必然")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("span",[this._v("Vue?")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"revue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revue","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("span",[this._v("Revue")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 首先创建你的 reducers/actions/store")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 然后引入 revue 和你的 store")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Revue "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'revue'")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" store "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'./store'")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 将 Revue 作为一个插件在 Vue 中初始化")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 同时绑定这个 store")]),t._v("\nVue"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("use")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Revue"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这样就大功告成了，之后在每一个 Vue 实例被创建之后每个实例都会有 "),s("code",[this._v("this.$revue")]),this._v(" 属性和 "),s("code",[this._v("this.$subscribe")]),this._v(" 方法。现在就介绍这些该如何被使用:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token function"}},[t._v("data")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// this.$revue 实际上指向你创建的 redux store 对象")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 所以 store 有的方法都可以通过 this.$revue 调用")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 每一个 state 都需要一个初始状态")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 然后像下面这样调用初始状态")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcounter"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),n("span",{attrs:{class:"token comment"}},[t._v("// 假设默认你设置的是 0")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmethods"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token function"}},[t._v("handleClick")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 点击之后执行 increment 让 counter 自增")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'INCERMENT'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 现在 store 里的 state 改变了!")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// this.$revue.getState().counter 的值现在为 1")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{attrs:{class:"token function"}},[t._v("ready")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 你改变了 store 里的 state 可是它不会反映到你的实例中!")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 你需要手动订阅这个 state 更新")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("$subscribe")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'counter'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 我的 store 里没有 counter 这个状态，我给它起的名字是 count 怎么办?")]),t._v("\n\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// 很简单")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("$subscribe")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'count as counter'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("郑重提醒，本文开头提到的小明不是明哥，如有雷同，明哥不要打我。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我个人是一般是使用 redux-actions 和 redux-saga 这套组合")])])}],!1,null,null,null);s.default=r.exports}}]);