{"version":3,"sources":["webpack:///source/_posts/log-in-with-your-teminal.md","webpack:///./source/_posts/log-in-with-your-teminal.md?4222","webpack:///./source/_posts/log-in-with-your-teminal.md","webpack:///./source/_posts/log-in-with-your-teminal.md?bb4d"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAYA;AAAA;AAAA,G;;;;;;;;;;;;;;ACZA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,sBAAsB,ujBAAujB,OAAO,2FAA2F;AACzxB,oCAAoC,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,eAAe,UAAU,mCAAmC,uCAAuC,4DAA4D,cAAc,aAAa,0BAA0B,wBAAwB,mJAAmJ,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,WAAW,UAAU,mCAAmC,mCAAmC,wDAAwD,cAAc,aAAa,0BAA0B,wBAAwB,+KAA+K,cAAc,aAAa,0BAA0B,wBAAwB,2PAA2P;;;;;;;;;;;;;;;;;;ACDlxC;AAClC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gF;;;;;;;;;;;;;;wCClB+T,6VAAoB,C","file":"assets/js/34.03291722.js","sourcesContent":["<template>\n<div class=\"content\"><p>显然你经常在网页和 APP 里使用第三方登录功能，比如用微博登录、用 QQ 登录、用 GitHub 登录，具体的方式是打开相关网页进行授权或者移动端可以利用应用内授权机制授权，那么在终端里如何操作第三方账号登录呢？</p>\n<p>很显然，也只能通过打开授权网页的方式获取需要的 access token 来进行操作。</p>\n<h2 id=\"新建一个应用\"><a class=\"header-anchor\" href=\"#新建一个应用\" aria-hidden=\"true\">#</a> <span>新建一个应用</span></h2>\n<p>常规步骤，稍后会用在这里获得的 <code>Client ID</code> 和 <code>Client Secret</code> 进行授权验证。</p>\n<h2 id=\"思路\"><a class=\"header-anchor\" href=\"#思路\" aria-hidden=\"true\">#</a> <span>思路</span></h2>\n<p>这些操作需要你将 API 搭建在自己的服务器上并且拥有数据库读写功能。</p>\n<p>你需要用户触发登录操作之后以 GET 的方式打开一个授权网页，比如 <code>/api/login</code>，请求时在 URL Query String 中传输一个随机生成的用户 Unique ID，形如 <code>/api/login?uid=$UID</code>，推荐使用 <a href=\"https://www.npmjs.org/package/open\" target=\"_blank\" rel=\"noopener noreferrer\">open<OutboundLink/></a> 这个库打开网址。</p>\n<p>授权成功之后获得的 access token 和 UID 保存到数据库，在之前打开授权页面的同时 POST 请求 <code>/api/token</code>，在 body 中传输 UID 信息，设置一个较高的 timeout 让网页不会返回超时。</p>\n<p>在授权过程中由于并未获取到 token 所以让 <code>/api/token</code> 返回一个 50X 错误，判断获取到 50X 错误后用 setInterval 持续请求这个地址直到返回 200 代码，这个时候 access token 已经被你写入数据库并在这个页面上以 json 的格式输出了，于是这样你得到了需要的 access token，命令行现在可以打印出登录成功的提示信息了。</p>\n</div>\n</template>\n<script>export default { props: ['target'] }</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('p',[_vm._v(\"显然你经常在网页和 APP 里使用第三方登录功能，比如用微博登录、用 QQ 登录、用 GitHub 登录，具体的方式是打开相关网页进行授权或者移动端可以利用应用内授权机制授权，那么在终端里如何操作第三方账号登录呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"很显然，也只能通过打开授权网页的方式获取需要的 access token 来进行操作。\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"这些操作需要你将 API 搭建在自己的服务器上并且拥有数据库读写功能。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你需要用户触发登录操作之后以 GET 的方式打开一个授权网页，比如 \"),_c('code',[_vm._v(\"/api/login\")]),_vm._v(\"，请求时在 URL Query String 中传输一个随机生成的用户 Unique ID，形如 \"),_c('code',[_vm._v(\"/api/login?uid=$UID\")]),_vm._v(\"，推荐使用 \"),_c('a',{attrs:{\"href\":\"https://www.npmjs.org/package/open\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"open\"),_c('OutboundLink')],1),_vm._v(\" 这个库打开网址。\")]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"新建一个应用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#新建一个应用\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"新建一个应用\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"常规步骤，稍后会用在这里获得的 \"),_c('code',[_vm._v(\"Client ID\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"Client Secret\")]),_vm._v(\" 进行授权验证。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"思路\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#思路\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"思路\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"授权成功之后获得的 access token 和 UID 保存到数据库，在之前打开授权页面的同时 POST 请求 \"),_c('code',[_vm._v(\"/api/token\")]),_vm._v(\"，在 body 中传输 UID 信息，设置一个较高的 timeout 让网页不会返回超时。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"在授权过程中由于并未获取到 token 所以让 \"),_c('code',[_vm._v(\"/api/token\")]),_vm._v(\" 返回一个 50X 错误，判断获取到 50X 错误后用 setInterval 持续请求这个地址直到返回 200 代码，这个时候 access token 已经被你写入数据库并在这个页面上以 json 的格式输出了，于是这样你得到了需要的 access token，命令行现在可以打印出登录成功的提示信息了。\")])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./log-in-with-your-teminal.md?vue&type=template&id=749b8958&\"\nimport script from \"./log-in-with-your-teminal.md?vue&type=script&lang=js&\"\nexport * from \"./log-in-with-your-teminal.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./log-in-with-your-teminal.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./log-in-with-your-teminal.md?vue&type=script&lang=js&\""],"sourceRoot":""}