(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{187:function(t,s,a){"use strict";a.r(s);var n={props:["target"]},e=a(6),c=Object(e.a)(n,function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("首先 "),a("code",[t._v(".slice")]),t._v(" 这个方法在不接受任何参数的时候会返回 "),a("code",[t._v("this")]),t._v(" 本身，这是一个 "),a("code",[t._v("Array.prototype")]),t._v(" 下的方法，因此 "),a("code",[t._v("this")]),t._v(" 就是指向调用 "),a("code",[t._v(".slice")]),t._v(" 方法的数组本身。")]),t._v(" "),a("p",[a("code",[t._v("arguments")]),t._v(" 是什么? "),a("code",[t._v("arguments")]),t._v(" 是属于函数内部的变量，其值是函数参数列表，一个类数组对象:")]),t._v(" "),a("p",[t._v("https://codepan.net/gist/edb0a855276de09d24ac0e5621957974")]),t._v(" "),a("p",[t._v("类数组对象可以像真正的数组对象一样操作，除了没有 length 属性，但这足以让 "),a("code",[t._v(".slice")]),t._v(" 方法识别了。")]),t._v(" "),a("p",[t._v("你不可能用 "),a("code",[t._v("arguments.slice()")]),t._v(" 这样的形式调用，因为 "),a("code",[t._v("arguments")]),t._v(" 本身还是一个非数组对象，只是像数组。这个时候你想到了 "),a("code",[t._v(".call")]),t._v(" 方法，这个方法让你可以自定义调用函数的内部 this 指向哪里，之前说过，默认是指向调用这个函数的对象。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Array"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// output:")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("这样你就得到了一个真正的参数数组了，而 "),a("code",[t._v(".slice")]),t._v(" 除了通过 "),a("code",[t._v("Array.prototype")]),t._v(" 访问当然还可以通过对象直接量访问:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);s.default=c.exports}}]);