(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{185:function(t,s,a){"use strict";a.r(s);var n={props:["target"]},e=a(3),r=Object(e.a)(n,function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("Jest 是 FaceBook 用来测试 JavaScript 应用的一套测试框架，这些应用当然也包括了 React 应用。它的优点之一是自带了对 React 的支持，同时也很容易支持其它框架。")]),t._v(" "),a("p",[t._v("从最简单的开始，我们可以看看如何用 Jest 测试纯 JS 项目。")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._m(2),t._v(" "),t._m(3),a("details",{staticStyle:{"margin-bottom":"30px"}},[t._m(4),t._v(" "),a("p",[t._v("这里的 "),a("code",[t._v("expect")]),t._v(" "),a("code",[t._v("toBe")]),t._v(" 是 Jest 默认使用的断言语法，也就是用来比较 "),a("code",[t._v("值")]),t._v(" 的 API，详见"),a("a",{attrs:{href:"https://facebook.github.io/jest/docs/en/using-matchers.html#content",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关文档"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),a("p",[t._v("然后重新运行 jest 测试便通过了:")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("当你要测试的代码引用了非 JS 文件时，Jest 就不知道如何使用这些文件了，例如你的 Webpack 项目中的一个文件:")]),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),a("p",[t._v("[^1]: Jest 默认使用 "),a("code",[t._v("[ '**/__tests__/**/*.js?(x)', '**/?(*.)(spec|test).js?(x)' ]")]),t._v(" 这些测试文件，当然这是"),a("a",{attrs:{href:"https://facebook.github.io/jest/docs/en/configuration.html#testmatch-array-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("可配置"),a("OutboundLink")],1),t._v("的。\n[^2]: "),a("code",[t._v(".vue")]),t._v(" 的 "),a("code",[t._v("transform")]),t._v(" 可以使用社区的 "),a("a",{attrs:{href:"https://github.com/eddyerburgh/vue-jest",target:"_blank",rel:"noopener noreferrer"}},[t._v("jest-vue"),a("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("假设你要测试的是一个 Web 应用，依赖于一些浏览器 API 比如 "),a("code",[t._v("window")]),t._v(" "),a("code",[t._v("document")]),t._v("，它在 Jest 中同样可以正常运行，因为 Jest 默认使用了 "),a("a",{attrs:{href:"https://github.com/tmpvar/jsdom",target:"_blank",rel:"noopener noreferrer"}},[t._v("js-dom"),a("OutboundLink")],1),t._v(" 来模拟浏览器环境，不需要浏览器环境时可以通过使用命令行参数 "),a("code",[t._v("--env node")]),t._v(" 或者"),a("a",{attrs:{href:"http://facebook.github.io/jest/docs/en/configuration.html#testenvironment-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置文件"),a("OutboundLink")],1),t._v("来禁用。")]),t._v(" "),t._m(22),t._v(" "),a("p",[t._v("当你期望某个值不会改变的时候，可以使用 snapshot 测试。简单地说，它就是记录这个值的状态到"),a("a",{attrs:{href:"https://github.com/facebook/jest/blob/master/examples/snapshot/__tests__/__snapshots__/link.react.test.js.snap",target:"_blank",rel:"noopener noreferrer"}},[t._v("本地自动生成的 snapshot 文件"),a("OutboundLink")],1),t._v("里，然后在下一次测试中用新的值来和其进行对比。这对 UI 之类的测试很有帮助:")]),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("类似的，Snapshot 测试不止于 UI 测试中，假设你写了个 Markdown 解析器，你可以用它来确保解析出的内容不会改变:")]),t._v(" "),t._m(26),a("p",[t._v("查看"),a("a",{attrs:{href:"https://facebook.github.io/jest/docs/en/snapshot-testing.html#content",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(27),t._v(" "),a("p",[t._v("https://facebook.github.io/jest/docs/en/asynchronous.html#content")]),t._v(" "),t._m(28)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设你需要测试 "),s("code",[this._v("sum.js")]),this._v(":")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("你只需要对应地新建一个 "),s("code",[this._v("sum.test.js")]),this._v("[^1]:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sum "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./sum'")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'sum'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("expect")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("sum")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toBe")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("summary",[s("p",[this._v("关于这里的 "),s("code",[this._v("expect")]),this._v(" 语法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后在终端运行 "),s("code",[this._v("jest")]),this._v(" 命令的时候就会自动找到这个文件，执行这里面的测试:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2017/11/26/5a1a6a9148ca3.png",alt:"jest"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("额，报错了，原来 Jest 默认只支持你所使用的 node.js 版本所支持的 JS 特性，例如 "),s("code",[this._v("import")]),this._v(" "),s("code",[this._v("export")]),this._v(" 就不支持，所以要么你的代码使用系统 node.js 兼容的语法写 (也就是使用 "),s("code",[this._v("require")]),this._v(")，要么在这里使用 Babel 转义一下。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在 Jest 中使用 Babel 很简单，只需要安装 "),a("code",[t._v("babel-jest")]),t._v(" 并新建一个 "),a("code",[t._v(".babelrc")]),t._v(" 加入你想要的配置就行了，Jest 会自动使用 "),a("code",[t._v("babel-jest")]),t._v("。这里我们简单地使用 "),a("code",[t._v("babel-preset-env")]),t._v(" 即可，对应的 "),a("code",[t._v(".babelrc")]),t._v(" 是:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"presets"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"env"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2017/11/26/5a1a6c085ba32.png",alt:"jest 2"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于 React 应用，基本和纯 JS 项目类似，不过你需要在 "),s("code",[this._v(".babelrc")]),this._v(" 中配置对 "),s("code",[this._v("JSX")]),this._v(" 的支持，在大多数时候你的项目本身就已经在使用 "),s("code",[this._v(".babelrc")]),this._v(" 了，所以这一步甚至也省略掉了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"资源文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 资源文件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[this._v("import")]),this._v(" "),s("span",{attrs:{class:"token string"}},[this._v("'./style.css'")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("正如你需要在 Webpack 中配置了 "),s("code",[this._v("css-loader")]),this._v(" 一样，你也需告诉 Jest 如何处理 CSS 文件。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("📝 "),s("strong",[this._v("package.json:")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"jest"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"transform"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"^.+\\\\.(js|jsx)$"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"babel-jest"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"^.+\\\\.css$"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<rootDir>/jest/css-transform.js"')]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("details",{staticStyle:{"margin-bottom":"30px"}},[a("summary",[a("p",[t._v("关于 babel-jest")])]),t._v(" "),a("p",[t._v("当你手动在 "),a("code",[t._v("package.json")]),t._v(" 里设置了 "),a("code",[t._v("jest.transform")]),t._v(" 时 "),a("code",[t._v("babel-jest")]),t._v(" 不再会被自动使用了，我们需要在这里手动配置。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对应的 "),s("code",[this._v("./jest/css-transform.js")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 大多数测试并不关心 CSS 文件里的内容")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 所以这里我们直接返回一个空的对象")]),t._v("\nmodule"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("process")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module.exports = {};'")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("getCacheKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// The output is always the same.")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'css-cache'")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("类似地，你可以使用 "),s("code",[this._v("transform")]),this._v(" 来设定如何处理其它类型的文件，比如 "),s("code",[this._v(".vue")]),this._v("[^2] "),s("code",[this._v(".svg")]),this._v(" 文件。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"浏览器-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-api","aria-hidden":"true"}},[this._v("#")]),this._v(" 浏览器 API")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"snapshot-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#snapshot-测试","aria-hidden":"true"}},[this._v("#")]),this._v(" Snapshot 测试")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Link "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'../Link.react'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" renderer "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'react-test-renderer'")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("it")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'renders correctly'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tree "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" renderer\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("create")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Link page"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"http://www.facebook.com"')]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("Facebook"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toJSON")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("expect")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tree"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toMatchSnapshot")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这确保了 "),s("code",[this._v('<Link page="http://www.facebook.com">Facebook</Link>')]),this._v(" 渲染出的内容不会出错。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当你更改了 "),s("code",[this._v("<Link>")]),this._v(" 组件的逻辑，需要更新 snapshot 文件时，可以加上 "),s("code",[this._v("--updateSnapshot")]),this._v(" 或者 "),s("code",[this._v("-u")]),this._v(" 来更新。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" renderMarkdown "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./my-markdown-parser'")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'render correctly'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("renderMarkdown")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'# markdown code'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("expect")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toMatchSnapshot")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"异步代码测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步代码测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步代码测试")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我就懒得写了... 反正用 "),s("code",[this._v("Promise")]),this._v(" 或者 "),s("code",[this._v("async/await")]),this._v(" 就对了。")])}],!1,null,null,null);s.default=r.exports}}]);