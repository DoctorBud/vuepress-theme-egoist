(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{198:function(t,s,n){"use strict";n.r(s);var a={props:["target"]},e=n(3),r=Object(e.a)(a,function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("p",[t._v("你可能已经知道，在终端里可以调用不同的解释器来执行你的程序，比如:")]),t._v(" "),t._m(0),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),n("p",[t._v("然后在终端可以看到期望的结果:")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("正如浏览器里的 URL 有相应的各种路由解析库一样，将 "),n("code",[t._v("/user/egoist")]),t._v(" 解析成 "),n("code",[t._v("{ username: 'egoist' }")]),t._v(" 之类的，命令行参数当然也有，"),n("a",{attrs:{href:"https://github.com/substack/minimist",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimist"),n("OutboundLink")],1),t._v(" 便是 node.js 社区里应用最多的一个:")]),t._v(" "),t._m(14),n("p",[t._v("使用不同的命令执行一下这段代码试试:")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),n("p",[t._v("类似 web 开发，你当然可以完全从头写你的命令行程序，自己实现一个命令行参数解释器，然后自行判断如何根据参数返回结果。")]),t._v(" "),n("p",[t._v("不过这有点浪费时间且本末倒置，如果你就是想学习那些方面的内容，你可以那样干，否则如果你只是想为你的一个奇思妙实现一个命令行工具，那就有点得不偿失，不如直接使用现成的框架来加速达成你原本的目标。")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("在这里我就不过多介绍框架了，毕竟只要了解原理就能举一反三，不过我还是推荐几个常用的，节省读者的时间:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/sindresorhus/meow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Meow"),n("OutboundLink")],1),t._v(": 简单的基于 "),n("a",{attrs:{href:"https://github.com/substack/minimist",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimist"),n("OutboundLink")],1),t._v(" 的包装，没什么新功能。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/tj/commander.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commander.js"),n("OutboundLink")],1),t._v(": 功能齐全的框架，提供类似 git 的子命令系统，自动生成帮助信息等。")]),t._v(" "),n("li",[n("strong",[n("a",{attrs:{href:"https://github.com/egoist/cac",target:"_blank",rel:"noopener noreferrer"}},[t._v("CAC"),n("OutboundLink")],1),t._v(": 类似 Commander.js 但更轻巧、现代，支持插件。(我做的)")])]),t._v(" "),n("li",[n("a",{attrs:{href:"http://yargs.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yargs"),n("OutboundLink")],1),t._v(": 功能强大的框架，但显得过于臃肿。")])]),t._v(" "),n("p",[t._v("这里用 CAC 举个简单的例子，介绍一下如何使用:")]),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),n("p",[t._v("这里通过配置 "),n("a",{attrs:{href:"https://docs.npmjs.com/files/package.json#bin",target:"_blank",rel:"noopener noreferrer"}},[t._v("bin"),n("OutboundLink")],1),t._v(" 让 npm 在安装程序的时候在 "),n("code",[t._v("{prefix}/bin")]),t._v(" 目录创建一个"),n("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("符号链接"),n("OutboundLink")],1),t._v("指向 "),n("code",[t._v("./cli.js")]),t._v(" 的绝对路径。在不同的情况下这个 "),n("code",[t._v("prefix")]),t._v(" 不同:")]),t._v(" "),t._m(32),t._v(" "),t._m(33)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# 执行一段 shell 脚本")]),this._v("\nsh ./foo.sh\n"),s("span",{attrs:{class:"token comment"}},[this._v("# 执行一段 node.js 代码")]),this._v("\nnode ./bar.js\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("下一步你想做的可能是省略解释器，直接通过运行 "),s("code",[this._v("./foo.sh")]),this._v(" 或者 "),s("code",[this._v("./bar.js")]),this._v(" 来执行你的程序。想在命令行输入命令时省略解释器，你可以将它写入实际运行的程序中，比如 "),s("code",[this._v("./bar.js")]),this._v(":")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("#"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("env node\nconsole"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这段程序第一行由两部分组成，即 "),n("strong",[t._v("Shebang")]),t._v(" 和 "),n("strong",[t._v("解释器命令")]),t._v("。"),n("strong",[t._v("Shebang")]),t._v(" 就是开头的 "),n("code",[t._v("#!")]),t._v("，它告诉系统调用后面声明的解释器，而我们需要调用的解释器是 "),n("code",[t._v("node")]),t._v("，执行 "),n("code",[t._v("/usr/bin/env node")]),t._v(" 可以寻找到系统 "),n("code",[t._v("$PATH")]),t._v(" 里第一个出现的 "),n("code",[t._v("node")]),t._v(" 命令。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这样你便可以通过执行 "),s("code",[this._v("./bar.js")]),this._v(" 来执行这段程序了:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("❯ "),s("span",{attrs:{class:"token function"}},[this._v("chmod")]),this._v(" +x bar.js\n❯ ./bar.js\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第一行的 "),s("code",[this._v("chmod +x bar.js")]),this._v(" 是让系统允许将文件 "),s("code",[this._v("bar.js")]),this._v(" 直接作为一段程序运行。现在你可以成功看到期望的输出:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2017/10/18/59e724560f339.png",alt:"bar"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"命令行参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数","aria-hidden":"true"}},[this._v("#")]),this._v(" 命令行参数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在网页应用里，我们依靠 "),s("em",[this._v("URL")]),this._v(" 来获得展现页面内容所需要的参数，比如依靠路径 "),s("code",[this._v("/user/egoist")]),this._v(" 来获取数据并渲染用户 "),s("code",[this._v("egoist")]),this._v(" 的页面。而命令行程序所依靠的便是命令行参数。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以刚才的 "),s("code",[this._v("bar.js")]),this._v(" 为例，假设你需要将 "),s("code",[this._v("bar")]),this._v(" 字符串重复 n 次输出，而 n 是用户决定的，你会这样做:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("#"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("env node\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" times "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\nconsole"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("times"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://ooo.0o0.ooo/2017/10/18/59e72774a1ce7.png",alt:"process.argv"}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("process.argv")]),t._v(" 是实际执行的命令参数列表(数组)，比如运行 "),n("code",[t._v("./bar 4")]),t._v(" 实际执行的是 "),n("code",[t._v("node ./bar 4")]),t._v("，第一个参数是解释器命令 "),n("code",[t._v("node")]),t._v("，第二个是被执行的程序路径。而我们这里只需要第三个参数。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" minimist "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'minimist'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 大多数情况我们不需要关心 process.argv 的前两项")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" argv "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("minimist")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("slice")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argv"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2017/10/18/59e72c19cea1f.png",alt:"minimist"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("之后你便可以灵活地通过 "),s("code",[this._v("argv")]),this._v(" 来判断如何输出用户期望的内容了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("命令行参数小贴士")]),this._v(":")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("形如 "),n("code",[t._v("--foo")]),t._v(" 的叫做 "),n("code",[t._v("switch")]),t._v("，也就是代表了一个布尔值 "),n("code",[t._v("foo: true")]),t._v("，后面不加任何值。\n"),n("ul",[n("li",[t._v("一般用 "),n("code",[t._v("--no-foo")]),t._v(" 来表示布尔值 "),n("code",[t._v("foo: false")]),t._v("。")])])]),t._v(" "),n("li",[t._v("形如 "),n("code",[t._v("--name egoist")]),t._v(" 的叫做 "),n("code",[t._v("flag")]),t._v(", 即后面要加值，比如字符串和数字。\n"),n("ul",[n("li",[t._v("类似的写法是 "),n("code",[t._v("--name=egoist")]),t._v("，用 "),n("code",[t._v("=")]),t._v(" 而不是空格来连接。")])])]),t._v(" "),n("li",[t._v("只有一个连字符的一般用于其它 flag 的简写，比如用 "),n("code",[t._v("-f")]),t._v(" 作为 "),n("code",[t._v("--foo")]),t._v(" 的简写，使用这两个之中任何一个的效果相同。连字符后面一般是单个字符，而一个连字符加多个字符其实相当于合并了多个简写，比如 "),n("code",[t._v("-xFd")]),t._v(" 相当于 "),n("code",[t._v("-x -F -d")]),t._v("。")]),t._v(" "),n("li",[t._v("某些命令行参数解释器支持用英文小数点 "),n("code",[t._v(".")]),t._v(" 连接的参数，比如: "),n("code",[t._v("--foo.bar baz")]),t._v("，解析之后对象 "),n("code",[t._v("foo")]),t._v(" 的属性 "),n("code",[t._v("bar")]),t._v(" 的值就是 "),n("code",[t._v("baz")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"命令行程序框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行程序框架","aria-hidden":"true"}},[this._v("#")]),this._v(" 命令行程序框架")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"框架干了哪些事"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#框架干了哪些事","aria-hidden":"true"}},[this._v("#")]),this._v(" 框架干了哪些事")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("根据不同的命令[^1]调用不同的模块。")]),t._v(" "),n("li",[t._v("自动生成帮助信息，比如执行 "),n("code",[t._v("git --help")]),t._v(" 显示的内容。")]),t._v(" "),n("li",[t._v("让整个程序更安全，比如指定 flag 哪些是必需的。")]),t._v(" "),n("li",[t._v("自动命令补全。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 假设把它放在 cli.js 里")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cli "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'cac'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 定义一个命令")]),t._v("\ncli"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("command")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'hi'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'打招呼'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Hi ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v("`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 开始解析 process.argv 并执行相应命令")]),t._v("\ncli"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("parse")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("执行 "),s("code",[this._v("./cli.js")]),this._v(" 试试:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://i.loli.net/2017/10/18/59e76be370455.png",alt:"cac"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如你所见，这里只会在执行 "),s("code",[this._v("hi")]),this._v(" 命令之后才会打招呼。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("同时添加 "),s("code",[this._v("--help")]),this._v(" flag 会打印出帮助信息:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://ooo.0o0.ooo/2017/10/18/59e76f8c2d27a.png",alt:"help"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"配置-package-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-package-json","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置 package.json")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("要想让你的程序的可执行文件全局可用，你需要将其加入到系统 "),s("code",[this._v("PATH")]),this._v(" 中，而 npm 简化了这一步骤:")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token property"}},[t._v('"name"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"my-cli"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token property"}},[t._v('"bin"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"./cli.js"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在本地测试时执行 "),s("code",[this._v("npm link")]),this._v(" 或者 "),s("code",[this._v("npm i -g .")]),this._v(" 系统便有了 "),s("code",[this._v("my-cli")]),this._v(" 命令。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("全局安装的模块(即 "),n("code",[t._v("npm install -g")]),t._v(")的 "),n("code",[t._v("prefix")]),t._v(" 是执行 "),n("code",[t._v("npm prefix -g")]),t._v(" 得到的路径。")]),t._v(" "),n("li",[t._v("否则将是当前目录里的 "),n("code",[t._v("./node_modules/.bin")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("[^1]: 这里的命令指程序中的命令，比如 "),s("code",[this._v("git")]),this._v(" 程序中有个命令叫 "),s("code",[this._v("log")]),this._v("，你可以通过执行 "),s("code",[this._v("git log")]),this._v(" 使用。")])}],!1,null,null,null);s.default=r.exports}}]);