{"version":3,"sources":["webpack:///source/_posts/revue-guide.md","webpack:///./source/_posts/revue-guide.md?ab32","webpack:///./source/_posts/revue-guide.md","webpack:///./source/_posts/revue-guide.md?a622"],"names":[],"mappings":"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","file":"assets/js/41.63f32a9a.js","sourcesContent":["<template>\n<div class=\"content\"><h2 id=\"缘起小明\"><a class=\"header-anchor\" href=\"#缘起小明\" aria-hidden=\"true\">#</a> <span>缘起小明</span></h2>\n<p>前几天小明找到我，说他想用 Vue 做一个小博客，自己写点东西，可是一来就遇到问题了，他发现组件之间的状态传递十分麻烦。父子组件还好点，在 Vue 里面可以用 <code>props</code> 执行函数或者 <code>this.$broadcast</code> <code>this.$dispatch</code> 来传递状态，可是两个完全没有联系的组件要共享状态十分困难啊。</p>\n<p>他是这样说的，他在做编辑器的时候侧边栏和编辑框都想知道用户<strong>是否已经保存</strong>这个状态， 而这两个组件完全没办法通过上述的几个方法共享 state。</p>\n<p>于是小明告诉我他绞尽脑汁想到的几个方法:</p>\n<ul>\n<li>把这个状态放到这两个组件共同的父组件中然后通过 <code>prop.sync</code> 来同步这两个组件的这个状态</li>\n<li>在这两个组件中都放置这个状态然后通过共同父组件的一个 prop 来在父组件中调用函数执行一个 <code>this.$dispatch</code> 通知子组件这个状态有改动，借此来同步各个组件中的这个状态。</li>\n</ul>\n<p>以上方法都是可行的，但是一旦组件逻辑复杂起来这样的回调啊、绑定啊、同步啊都会乱套。</p>\n<h2 id=\"历史必然\"><a class=\"header-anchor\" href=\"#历史必然\" aria-hidden=\"true\">#</a> <span>历史必然</span></h2>\n<p>于是出现了 Redux !</p>\n<p>当然，Redux 不是为 Vue 出现的。不过却成为了解决所有 JavaScript 应用中状态管理的一种方案。</p>\n<p>我能做的关于 Redux 的介绍就是这样，了解更多请阅读官方<a href=\"https://github.com/rackt/redux\" target=\"_blank\" rel=\"noopener noreferrer\">自述<OutboundLink/></a>。</p>\n<h2 id=\"vue\"><a class=\"header-anchor\" href=\"#vue\" aria-hidden=\"true\">#</a> <span>Vue?</span></h2>\n<p>也许你现在知道了 Redux 最初是因为 React 这个 View Layer Framework 而生的，React 和 Vue 一样具有组件系统，需要状态管理。</p>\n<p>那么就把 Redux 应用到 Vue 中来吧?</p>\n<p>你可以这么做，也可以使用 Vue 官方的 Flux 实现 <a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener noreferrer\">Vuex<OutboundLink/></a>，它和 Redux 非常类似。几乎唯一的区别就是你需要在 action 里直接修改状态。这很好，因为 Vue 本身赞成的是 mutable state。而 Redux 中则是推荐不要修改状态而是返回一个新的状态，选择哪种看你习惯哪种。</p>\n<h2 id=\"revue\"><a class=\"header-anchor\" href=\"#revue\" aria-hidden=\"true\">#</a> <span>Revue</span></h2>\n<p>Redux 在 React 中的应用是通过 <a href=\"https://github.com/rackt/react-redux\" target=\"_blank\" rel=\"noopener noreferrer\">React-Redux<OutboundLink/></a> 来绑定的，显得十分复杂。在 Vue 中绑定 Redux 却是十分的简单：</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">// 首先创建你的 reducers/actions/store</span>\n<span class=\"token comment\">// 然后引入 revue 和你的 store</span>\n<span class=\"token keyword\">import</span> Revue <span class=\"token keyword\">from</span> <span class=\"token string\">'revue'</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span>\n<span class=\"token comment\">// 将 Revue 作为一个插件在 Vue 中初始化</span>\n<span class=\"token comment\">// 同时绑定这个 store</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Revue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这样就大功告成了，之后在每一个 Vue 实例被创建之后每个实例都会有 <code>this.$revue</code> 属性和 <code>this.$subscribe</code> 方法。现在就介绍这些该如何被使用:</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// this.$revue 实际上指向你创建的 redux store 对象</span>\n\t\t<span class=\"token comment\">// 所以 store 有的方法都可以通过 this.$revue 调用</span>\n\t\t<span class=\"token comment\">// 每一个 state 都需要一个初始状态</span>\n\t\t<span class=\"token comment\">// 然后像下面这样调用初始状态</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\t\tcounter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token comment\">// 假设默认你设置的是 0</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmethods<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">handleClick</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// 点击之后执行 increment 让 counter 自增</span>\n\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">'INCERMENT'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\">// 现在 store 里的 state 改变了!</span>\n\t\t\t<span class=\"token comment\">// this.$revue.getState().counter 的值现在为 1</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">ready</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// 你改变了 store 里的 state 可是它不会反映到你的实例中!</span>\n\t\t<span class=\"token comment\">// 你需要手动订阅这个 state 更新</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'counter'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 我的 store 里没有 counter 这个状态，我给它起的名字是 count 怎么办?</span>\n\t\t<span class=\"token comment\">// 很简单</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count as counter'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>郑重提醒，本文开头提到的小明不是明哥，如有雷同，明哥不要打我。</p>\n</blockquote>\n<blockquote>\n<p>我个人是一般是使用 redux-actions 和 redux-saga 这套组合</p>\n</blockquote>\n<hr>\n<p>相关链接:</p>\n<ul>\n<li><a href=\"https://github.com/rackt/redux\" target=\"_blank\" rel=\"noopener noreferrer\">Redux<OutboundLink/></a></li>\n<li><a href=\"https://github.com/egoist/revue\" target=\"_blank\" rel=\"noopener noreferrer\">Revue<OutboundLink/></a></li>\n<li><a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener noreferrer\">Vuex<OutboundLink/></a></li>\n</ul>\n</div>\n</template>\n<script>export default { props: ['target'] }</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"于是小明告诉我他绞尽脑汁想到的几个方法:\")]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('p',[_vm._v(\"以上方法都是可行的，但是一旦组件逻辑复杂起来这样的回调啊、绑定啊、同步啊都会乱套。\")]),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_c('p',[_vm._v(\"于是出现了 Redux !\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当然，Redux 不是为 Vue 出现的。不过却成为了解决所有 JavaScript 应用中状态管理的一种方案。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我能做的关于 Redux 的介绍就是这样，了解更多请阅读官方\"),_c('a',{attrs:{\"href\":\"https://github.com/rackt/redux\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"自述\"),_c('OutboundLink')],1),_vm._v(\"。\")]),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_c('p',[_vm._v(\"也许你现在知道了 Redux 最初是因为 React 这个 View Layer Framework 而生的，React 和 Vue 一样具有组件系统，需要状态管理。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那么就把 Redux 应用到 Vue 中来吧?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你可以这么做，也可以使用 Vue 官方的 Flux 实现 \"),_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vuex\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Vuex\"),_c('OutboundLink')],1),_vm._v(\"，它和 Redux 非常类似。几乎唯一的区别就是你需要在 action 里直接修改状态。这很好，因为 Vue 本身赞成的是 mutable state。而 Redux 中则是推荐不要修改状态而是返回一个新的状态，选择哪种看你习惯哪种。\")]),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('p',[_vm._v(\"Redux 在 React 中的应用是通过 \"),_c('a',{attrs:{\"href\":\"https://github.com/rackt/react-redux\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"React-Redux\"),_c('OutboundLink')],1),_vm._v(\" 来绑定的，显得十分复杂。在 Vue 中绑定 Redux 却是十分的简单：\")]),_vm._v(\" \"),_vm._m(7),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('p',[_vm._v(\"相关链接:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/rackt/redux\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Redux\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/egoist/revue\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Revue\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vuex\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Vuex\"),_c('OutboundLink')],1)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"缘起小明\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#缘起小明\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"缘起小明\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"前几天小明找到我，说他想用 Vue 做一个小博客，自己写点东西，可是一来就遇到问题了，他发现组件之间的状态传递十分麻烦。父子组件还好点，在 Vue 里面可以用 \"),_c('code',[_vm._v(\"props\")]),_vm._v(\" 执行函数或者 \"),_c('code',[_vm._v(\"this.$broadcast\")]),_vm._v(\" \"),_c('code',[_vm._v(\"this.$dispatch\")]),_vm._v(\" 来传递状态，可是两个完全没有联系的组件要共享状态十分困难啊。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"他是这样说的，他在做编辑器的时候侧边栏和编辑框都想知道用户\"),_c('strong',[_vm._v(\"是否已经保存\")]),_vm._v(\"这个状态， 而这两个组件完全没办法通过上述的几个方法共享 state。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"把这个状态放到这两个组件共同的父组件中然后通过 \"),_c('code',[_vm._v(\"prop.sync\")]),_vm._v(\" 来同步这两个组件的这个状态\")]),_vm._v(\" \"),_c('li',[_vm._v(\"在这两个组件中都放置这个状态然后通过共同父组件的一个 prop 来在父组件中调用函数执行一个 \"),_c('code',[_vm._v(\"this.$dispatch\")]),_vm._v(\" 通知子组件这个状态有改动，借此来同步各个组件中的这个状态。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"历史必然\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#历史必然\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"历史必然\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"vue\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#vue\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Vue?\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"revue\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#revue\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Revue\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 首先创建你的 reducers/actions/store\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 然后引入 revue 和你的 store\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"import\")]),_vm._v(\" Revue \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"from\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'revue'\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"import\")]),_vm._v(\" store \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"from\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'./store'\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 将 Revue 作为一个插件在 Vue 中初始化\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 同时绑定这个 store\")]),_vm._v(\"\\nVue\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"use\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Revue\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" store \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"这样就大功告成了，之后在每一个 Vue 实例被创建之后每个实例都会有 \"),_c('code',[_vm._v(\"this.$revue\")]),_vm._v(\" 属性和 \"),_c('code',[_vm._v(\"this.$subscribe\")]),_vm._v(\" 方法。现在就介绍这些该如何被使用:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Vue\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"data\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// this.$revue 实际上指向你创建的 redux store 对象\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 所以 store 有的方法都可以通过 this.$revue 调用\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 每一个 state 都需要一个初始状态\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 然后像下面这样调用初始状态\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\tcounter\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"$store\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"state\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"counter \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 假设默认你设置的是 0\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n\\tmethods\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"handleClick\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 点击之后执行 increment 让 counter 自增\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"$store\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"dispatch\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"type\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'INCERMENT'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 现在 store 里的 state 改变了!\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// this.$revue.getState().counter 的值现在为 1\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"ready\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 你改变了 store 里的 state 可是它不会反映到你的实例中!\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 你需要手动订阅这个 state 更新\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"$subscribe\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'counter'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 我的 store 里没有 counter 这个状态，我给它起的名字是 count 怎么办?\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 很简单\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"$subscribe\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'count as counter'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"郑重提醒，本文开头提到的小明不是明哥，如有雷同，明哥不要打我。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"我个人是一般是使用 redux-actions 和 redux-saga 这套组合\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./revue-guide.md?vue&type=template&id=1e268286&\"\nimport script from \"./revue-guide.md?vue&type=script&lang=js&\"\nexport * from \"./revue-guide.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./revue-guide.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./revue-guide.md?vue&type=script&lang=js&\""],"sourceRoot":""}