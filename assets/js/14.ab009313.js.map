{"version":3,"sources":["webpack:///source/_posts/2016-front-end-primer.md","webpack:///./source/_posts/2016-front-end-primer.md?d29f","webpack:///./source/_posts/2016-front-end-primer.md","webpack:///./source/_posts/2016-front-end-primer.md?058b"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AAAA;AAAA,G;;;;;;;;;;;;;;ACjFA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,sBAAsB,wJAAwJ,OAAO,kFAAkF,8hBAA8hB,OAAO,qFAAqF,qWAAqW,OAAO,2FAA2F,mPAAmP,OAAO,uHAAuH,4VAA4V,OAAO,4FAA4F,klBAAklB,OAAO,yGAAyG,0MAA0M,OAAO,kGAAkG,kFAAkF,OAAO,kGAAkG,oFAAoF,OAAO,gGAAgG;AAC7kH,oCAAoC,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,aAAa,UAAU,mCAAmC,qCAAqC,0DAA0D,cAAc,aAAa,0BAA0B,wBAAwB,0IAA0I,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,YAAY,UAAU,mCAAmC,oCAAoC,yDAAyD,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,iBAAiB,UAAU,mCAAmC,yCAAyC,8DAA8D,cAAc,aAAa,0BAA0B,wBAAwB,wHAAwH,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,aAAa,UAAU,mCAAmC,qCAAqC,kCAAkC,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,gBAAgB,UAAU,mCAAmC,wCAAwC,qCAAqC,cAAc,aAAa,0BAA0B,wBAAwB,iBAAiB,uCAAuC,YAAY,gBAAgB,wBAAwB,wBAAwB,OAAO,0BAA0B,2CAA2C,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,mCAAmC,OAAO,6BAA6B,2CAA2C,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,4CAA4C,OAAO,6BAA6B,mDAAmD,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,yCAAyC,OAAO,6BAA6B,mDAAmD,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,oCAAoC,OAAO,6BAA6B,mDAAmD,OAAO,6BAA6B,WAAW,6BAA6B,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,yDAAyD,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,mCAAmC,OAAO,6BAA6B,2CAA2C,OAAO,6BAA6B,WAAW,6BAA6B,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,oEAAoE,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,+BAA+B,OAAO,6BAA6B,2CAA2C,OAAO,6BAA6B,WAAW,6BAA6B,OAAO,6BAA6B,WAAW,wBAAwB,cAAc,aAAa,0BAA0B,wBAAwB,wJAAwJ,cAAc,aAAa,0BAA0B,wBAAwB,qHAAqH,cAAc,aAAa,0BAA0B,wBAAwB,iBAAiB,uCAAuC,YAAY,gBAAgB,wBAAwB,wBAAwB,OAAO,0BAA0B,2CAA2C,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,mCAAmC,OAAO,6BAA6B,2CAA2C,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,0BAA0B,oCAAoC,OAAO,6BAA6B,mDAAmD,OAAO,0BAA0B,WAAW,wCAAwC,OAAO,6BAA6B,WAAW,iCAAiC,OAAO,0BAA0B,mCAAmC,OAAO,6BAA6B,2CAA2C,OAAO,0BAA0B,WAAW,uCAAuC,OAAO,6BAA6B,WAAW,mCAAmC,OAAO,0BAA0B,+BAA+B,OAAO,6BAA6B,2CAA2C,OAAO,6BAA6B,WAAW,iCAAiC,OAAO,6BAA6B,WAAW,+BAA+B,OAAO,6BAA6B,WAAW,6BAA6B,OAAO,6BAA6B,WAAW,wBAAwB,cAAc,aAAa,0BAA0B,wBAAwB,qIAAqI,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,oBAAoB,UAAU,mCAAmC,4CAA4C,iEAAiE,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,mBAAmB,UAAU,mCAAmC,2CAA2C,gEAAgE,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,gBAAgB,UAAU,mCAAmC,wCAAwC,6DAA6D,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,qBAAqB,UAAU,mCAAmC,6CAA6C,0CAA0C,cAAc,aAAa,0BAA0B,wBAAwB,gBAAgB,OAAO,YAAY,UAAU,mCAAmC,oCAAoC,yDAAyD,cAAc,aAAa,0BAA0B,wBAAwB,2DAA2D,cAAc,aAAa,0BAA0B,wBAAwB,4LAA4L;;;;;;;;;;;;;;;;;;ACD5xP;AAClC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gF;;;;;;;;;;;;;;wCClB4T,0VAAoB,C","file":"assets/js/14.ab009313.js","sourcesContent":["<template>\n<div class=\"content\"><p>年初在 V2EX 看到很多人发帖问前端如何入门，我姑且来分享一下我的经验。</p>\n<p>或许你不知道我是谁，不过如果你对前端有兴趣，都可以联系我帮你 Review 代码、提供改进建议，这有我的 <a href=\"https://github.com/egoist\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub<OutboundLink/></a> 地址。</p>\n<p>我假设阅读者只了解过简单的 HTML/CSS。</p>\n<h2 id=\"html\"><a class=\"header-anchor\" href=\"#html\" aria-hidden=\"true\">#</a> <span>HTML</span></h2>\n<p>HTML 没有了 CSS 就什么都不是，它相当于给网页各个区域命名，然后让你可以进行更多的操作。比如头部导航栏，你经常会给它起个名字叫 <code>header</code>。</p>\n<h2 id=\"css\"><a class=\"header-anchor\" href=\"#css\" aria-hidden=\"true\">#</a> <span>CSS</span></h2>\n<p>CSS 是层叠样式表（Cascading Style Sheets）的缩写，它是用来定义你的 HTML 的展现形式的一种语言。比如让你的 HTML 里的文字显示不同字体，一个元素显示不同的高度。</p>\n<h2 id=\"html-css\"><a class=\"header-anchor\" href=\"#html-css\" aria-hidden=\"true\">#</a> <span>HTML+CSS</span></h2>\n<p>HTML 和 CSS 都是语法非常<strong>松散</strong>的语言，这样的导致了它们入门非常简单，然而一旦代码量变大维护就会很困难。</p>\n<h3 id=\"模板引擎\"><a class=\"header-anchor\" href=\"#模板引擎\" aria-hidden=\"true\">#</a> 模板引擎</h3>\n<p>假设你有两个网页，它们共用一个导航栏（header），然后只有主体（content）部分显示不同的内容，在已有知识背景下你只能做两个网页，把导航栏的代码复制两次。</p>\n<p>于是有了模板引擎，比如 <a href=\"https://github.com/pugjs/pug\" target=\"_blank\" rel=\"noopener noreferrer\">pug<OutboundLink/></a>，他可以让你复用重复的模板，减少代码量，提高可维护性。</p>\n<h3 id=\"css-处理器\"><a class=\"header-anchor\" href=\"#css-处理器\" aria-hidden=\"true\">#</a> CSS 处理器</h3>\n<p>看下面这段代码:</p>\n<!--beforebegin--><div class=\"language-css extra-class\"><!--afterbegin--><pre v-pre class=\"language-css\"><code><span class=\"token selector\">.post</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">-webkit-box-shadow</span><span class=\"token punctuation\">:</span> 0 0 1px #ccc<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">-moz-box-shadow</span><span class=\"token punctuation\">:</span> 0 0 1px #ccc<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 1px #ccc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post .post-content</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post .post-content .post-date</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>你会发现上面的 <code>box-shadow</code> 写了三次，以便支持不同内核浏览器下的 <code>box-shadow</code> 这个属性。</p>\n<p>还有随着代码量增大像 <code>.post .post-content .post-date</code> 这样长的定义会越来越长。</p>\n<p>这是有了 CSS 处理器之后的代码:</p>\n<!--beforebegin--><div class=\"language-css extra-class\"><!--afterbegin--><pre v-pre class=\"language-css\"><code><span class=\"token selector\">.post</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 1px #ccc<span class=\"token selector\">;\n\t.content</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token selector\">;\n\t\t.date</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>嵌套的风格让作用域更清晰，你同时可以尽可能地只用标准的 CSS 属性然后让 CSS 处理器帮你兼容其它浏览器。推荐使用 <a href=\"https://github.com/postcss/postcss\" target=\"_blank\" rel=\"noopener noreferrer\">PostCSS<OutboundLink/></a>，它本身并不改变你的 CSS 代码，但它把你的代码抽象成一个 JavaScript 对象让你能够通过插件来随心所欲地进行操作，比如实现嵌套风格以及自动加 <code>-moz</code> <code>-webkit</code> 这些前缀。你可以自己写插件同时它已经有大量<a href=\"https://github.com/postcss/postcss/blob/master/docs/plugins.md\" target=\"_blank\" rel=\"noopener noreferrer\">现成的插件<OutboundLink/></a>供你使用。</p>\n<p>要记住的是，它只是将你<strong>自定义的 CSS 风格</strong>转换成符合浏览器标准的 CSS，至于为什么？标准的 CSS 不够好用呗，比如刚才遇到的问题。</p>\n<h2 id=\"html-css-小结\"><a class=\"header-anchor\" href=\"#html-css-小结\" aria-hidden=\"true\">#</a> <span>HTML+CSS 小结</span></h2>\n<p>现在你知道了 HTML/CSS 在一起使用的时候能干什么，也知道了用模板引擎、CSS 处理器可以让你更好地写 HTML/CSS。要记住，「更好」也许只是在代码量增大的情况下更明显。</p>\n<p>那么这些模板引擎和 CSS 处理器是怎么实现的？很多都是用的 JavaScript。</p>\n<p>推荐阅读: <a href=\"http://learn.shayhowe.com/html-css/\" target=\"_blank\" rel=\"noopener noreferrer\">Learn to Code HTML &amp; CSS<OutboundLink/></a> 正如其松散的特性一样，你需要多使用才能更好地掌握用法。</p>\n<h2 id=\"javascript\"><a class=\"header-anchor\" href=\"#javascript\" aria-hidden=\"true\">#</a> <span>JavaScript</span></h2>\n<p>JavaScript 是一门真正的语言，它简单且强大。（以下简称 JS）</p>\n<p>正如 HTML/CSS 是用于网页的样式呈现，JS （在过去）则是用于网页的交互操作上，比如用户点击了一个按钮然后弹出一个框，这些需要 JS 完成。</p>\n<p>JS 本身并不具有「监听用户点击」这一功能，在浏览器上，现代浏览器都内置了网页 DOM API，它提供了一套 JS 接口，让你可以用 JS 调用来实现相应功能，而这些功能本身是基于更低级的 C/C++ 语言实现的。</p>\n<p>因此，一名及格的前端需要掌握 JS 的基础，比如变量、数组、函数这些几乎所有语言都有的特性，然后就是 DOM API，缺了这个实现网页交互就是纸上谈兵。</p>\n<p>推荐阅读: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API\" target=\"_blank\" rel=\"noopener noreferrer\">MDN Web API<OutboundLink/></a> 非常全，需要更渐进的指南建议 Google。</p>\n<p>至于学习 JS 这门语言，推荐三本众所周知的，你并不需要全部都看，挑一本或两本尽量搞清楚就行了:</p>\n<ul>\n<li><a href=\"https://book.douban.com/subject/10549733/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript 权威指南<OutboundLink/></a></li>\n<li><a href=\"https://book.douban.com/subject/10546125/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript 高级程序设计<OutboundLink/></a></li>\n<li><a href=\"http://book.douban.com/subject/3590768/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript 语言精粹<OutboundLink/></a></li>\n</ul>\n<h2 id=\"node-js\"><a class=\"header-anchor\" href=\"#node-js\" aria-hidden=\"true\">#</a> <span>Node.js</span></h2>\n<p>刚才说过，过去的 JS 就是 JS 本身加上浏览器的 DOM API，于是就有人想到了：能不能把浏览器 DOM API 换成用户操作系统的 API？这样 JS 看起来就更像一门「真正的语言」，即可以在用户本地环境而不只是在浏览器中运行。</p>\n<p>幸好，谷歌浏览器（Chrome）使用的 JavaScript 运行环境（v8）发展到近几年已经能非常快地将 JS 代码转为机器码，于是 Node.js 的先驱们就成立了这个组织，基于 Chrome v8 引擎实现了一个跨平台 JavaScript 运行环境 —— 即现在非常流行的 Node.js。</p>\n<hr>\n<p>这样的感觉是不是很好? JavaScript 开发者的工具也能用 JavaScript 开发了！这才是副标题里描述的「easy and powerful」的前提。</p>\n<h3 id=\"如何学习-node-js\"><a class=\"header-anchor\" href=\"#如何学习-node-js\" aria-hidden=\"true\">#</a> 如何学习 Node.js</h3>\n<p>大同小异，如果你在之前知道了如何学习 JavaScript。无非是 JS 本身加上 Node.js 提供的 API 而已。你可以直接打开 Node.js 官网查看其 API。</p>\n<p>Node.js 只是一个运行环境，类似于 Java 的 JVM，最重要的还是 JavaScript 本身。</p>\n<h2 id=\"es6\"><a class=\"header-anchor\" href=\"#es6\" aria-hidden=\"true\">#</a> <span>ES6</span></h2>\n<p>很大的可能你现在都是在用 ES5 标准的 JavaScript 语法，而 ES6 则是 TC39(负责制定 JavaScript 语言标准的机构) 在 2015 年新推出的语言标准。</p>\n<p><strong>为什么我要学新的 ES6 标准?</strong></p>\n<ul>\n<li>你不必。因为 ES6 及以后的任何一个新的 JS 标准都是向后兼容的，也就是说任何你现在写的代码也是符合未来版本的 JS 的标准的。</li>\n<li>为什么不？试试又不会怀孕，而且你会有眼前一亮的感觉。任何语言都是在进化的，特别是前端发展那么快。</li>\n</ul>\n<p>说得差不多了，不过你可能奇怪为什么不介绍如何学习一些 JS 框架呢？比如 jQuery、Angular、React、Vue 这些。</p>\n<p>OK，下期就是这些框架的介绍，同时以后会介绍一些构建工具和其它相关内容。</p>\n</div>\n</template>\n<script>export default { props: ['target'] }</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('p',[_vm._v(\"年初在 V2EX 看到很多人发帖问前端如何入门，我姑且来分享一下我的经验。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"或许你不知道我是谁，不过如果你对前端有兴趣，都可以联系我帮你 Review 代码、提供改进建议，这有我的 \"),_c('a',{attrs:{\"href\":\"https://github.com/egoist\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"GitHub\"),_c('OutboundLink')],1),_vm._v(\" 地址。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我假设阅读者只了解过简单的 HTML/CSS。\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"CSS 是层叠样式表（Cascading Style Sheets）的缩写，它是用来定义你的 HTML 的展现形式的一种语言。比如让你的 HTML 里的文字显示不同字体，一个元素显示不同的高度。\")]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_c('p',[_vm._v(\"假设你有两个网页，它们共用一个导航栏（header），然后只有主体（content）部分显示不同的内容，在已有知识背景下你只能做两个网页，把导航栏的代码复制两次。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"于是有了模板引擎，比如 \"),_c('a',{attrs:{\"href\":\"https://github.com/pugjs/pug\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"pug\"),_c('OutboundLink')],1),_vm._v(\"，他可以让你复用重复的模板，减少代码量，提高可维护性。\")]),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('p',[_vm._v(\"看下面这段代码:\")]),_vm._v(\" \"),_vm._m(7),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_c('p',[_vm._v(\"这是有了 CSS 处理器之后的代码:\")]),_vm._v(\" \"),_vm._m(10),_c('p',[_vm._v(\"嵌套的风格让作用域更清晰，你同时可以尽可能地只用标准的 CSS 属性然后让 CSS 处理器帮你兼容其它浏览器。推荐使用 \"),_c('a',{attrs:{\"href\":\"https://github.com/postcss/postcss\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"PostCSS\"),_c('OutboundLink')],1),_vm._v(\"，它本身并不改变你的 CSS 代码，但它把你的代码抽象成一个 JavaScript 对象让你能够通过插件来随心所欲地进行操作，比如实现嵌套风格以及自动加 \"),_c('code',[_vm._v(\"-moz\")]),_vm._v(\" \"),_c('code',[_vm._v(\"-webkit\")]),_vm._v(\" 这些前缀。你可以自己写插件同时它已经有大量\"),_c('a',{attrs:{\"href\":\"https://github.com/postcss/postcss/blob/master/docs/plugins.md\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"现成的插件\"),_c('OutboundLink')],1),_vm._v(\"供你使用。\")]),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_c('p',[_vm._v(\"现在你知道了 HTML/CSS 在一起使用的时候能干什么，也知道了用模板引擎、CSS 处理器可以让你更好地写 HTML/CSS。要记住，「更好」也许只是在代码量增大的情况下更明显。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那么这些模板引擎和 CSS 处理器是怎么实现的？很多都是用的 JavaScript。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"推荐阅读: \"),_c('a',{attrs:{\"href\":\"http://learn.shayhowe.com/html-css/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Learn to Code HTML & CSS\"),_c('OutboundLink')],1),_vm._v(\" 正如其松散的特性一样，你需要多使用才能更好地掌握用法。\")]),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_c('p',[_vm._v(\"JavaScript 是一门真正的语言，它简单且强大。（以下简称 JS）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正如 HTML/CSS 是用于网页的样式呈现，JS （在过去）则是用于网页的交互操作上，比如用户点击了一个按钮然后弹出一个框，这些需要 JS 完成。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"JS 本身并不具有「监听用户点击」这一功能，在浏览器上，现代浏览器都内置了网页 DOM API，它提供了一套 JS 接口，让你可以用 JS 调用来实现相应功能，而这些功能本身是基于更低级的 C/C++ 语言实现的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"因此，一名及格的前端需要掌握 JS 的基础，比如变量、数组、函数这些几乎所有语言都有的特性，然后就是 DOM API，缺了这个实现网页交互就是纸上谈兵。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"推荐阅读: \"),_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"MDN Web API\"),_c('OutboundLink')],1),_vm._v(\" 非常全，需要更渐进的指南建议 Google。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"至于学习 JS 这门语言，推荐三本众所周知的，你并不需要全部都看，挑一本或两本尽量搞清楚就行了:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://book.douban.com/subject/10549733/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JavaScript 权威指南\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://book.douban.com/subject/10546125/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JavaScript 高级程序设计\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"http://book.douban.com/subject/3590768/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JavaScript 语言精粹\"),_c('OutboundLink')],1)])]),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_c('p',[_vm._v(\"刚才说过，过去的 JS 就是 JS 本身加上浏览器的 DOM API，于是就有人想到了：能不能把浏览器 DOM API 换成用户操作系统的 API？这样 JS 看起来就更像一门「真正的语言」，即可以在用户本地环境而不只是在浏览器中运行。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"幸好，谷歌浏览器（Chrome）使用的 JavaScript 运行环境（v8）发展到近几年已经能非常快地将 JS 代码转为机器码，于是 Node.js 的先驱们就成立了这个组织，基于 Chrome v8 引擎实现了一个跨平台 JavaScript 运行环境 —— 即现在非常流行的 Node.js。\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('p',[_vm._v(\"这样的感觉是不是很好? JavaScript 开发者的工具也能用 JavaScript 开发了！这才是副标题里描述的「easy and powerful」的前提。\")]),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_c('p',[_vm._v(\"大同小异，如果你在之前知道了如何学习 JavaScript。无非是 JS 本身加上 Node.js 提供的 API 而已。你可以直接打开 Node.js 官网查看其 API。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Node.js 只是一个运行环境，类似于 Java 的 JVM，最重要的还是 JavaScript 本身。\")]),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_c('p',[_vm._v(\"很大的可能你现在都是在用 ES5 标准的 JavaScript 语法，而 ES6 则是 TC39(负责制定 JavaScript 语言标准的机构) 在 2015 年新推出的语言标准。\")]),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_c('p',[_vm._v(\"说得差不多了，不过你可能奇怪为什么不介绍如何学习一些 JS 框架呢？比如 jQuery、Angular、React、Vue 这些。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"OK，下期就是这些框架的介绍，同时以后会介绍一些构建工具和其它相关内容。\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"html\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#html\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"HTML\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"HTML 没有了 CSS 就什么都不是，它相当于给网页各个区域命名，然后让你可以进行更多的操作。比如头部导航栏，你经常会给它起个名字叫 \"),_c('code',[_vm._v(\"header\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"css\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#css\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"CSS\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"html-css\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#html-css\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"HTML+CSS\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"HTML 和 CSS 都是语法非常\"),_c('strong',[_vm._v(\"松散\")]),_vm._v(\"的语言，这样的导致了它们入门非常简单，然而一旦代码量变大维护就会很困难。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"模板引擎\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#模板引擎\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 模板引擎\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"css-处理器\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#css-处理器\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" CSS 处理器\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-css extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-css\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\".post\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"font-size\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 14px\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"-webkit-box-shadow\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 0 0 1px #ccc\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"-moz-box-shadow\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 0 0 1px #ccc\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"box-shadow\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 0 0 1px #ccc\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\".post .post-content\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"font-size\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 16px\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\".post .post-content .post-date\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"color\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" #999\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"你会发现上面的 \"),_c('code',[_vm._v(\"box-shadow\")]),_vm._v(\" 写了三次，以便支持不同内核浏览器下的 \"),_c('code',[_vm._v(\"box-shadow\")]),_vm._v(\" 这个属性。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"还有随着代码量增大像 \"),_c('code',[_vm._v(\".post .post-content .post-date\")]),_vm._v(\" 这样长的定义会越来越长。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-css extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-css\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\".post\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"font-size\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 14px\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"box-shadow\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 0 0 1px #ccc\"),_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\";\\n\\t.content\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"font-size\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" 16px\"),_c('span',{attrs:{\"class\":\"token selector\"}},[_vm._v(\";\\n\\t\\t.date\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token property\"}},[_vm._v(\"color\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\":\")]),_vm._v(\" #999\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"要记住的是，它只是将你\"),_c('strong',[_vm._v(\"自定义的 CSS 风格\")]),_vm._v(\"转换成符合浏览器标准的 CSS，至于为什么？标准的 CSS 不够好用呗，比如刚才遇到的问题。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"html-css-小结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#html-css-小结\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"HTML+CSS 小结\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"javascript\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#javascript\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"JavaScript\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"node-js\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#node-js\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Node.js\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"如何学习-node-js\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#如何学习-node-js\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 如何学习 Node.js\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"es6\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#es6\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"ES6\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"为什么我要学新的 ES6 标准?\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"你不必。因为 ES6 及以后的任何一个新的 JS 标准都是向后兼容的，也就是说任何你现在写的代码也是符合未来版本的 JS 的标准的。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"为什么不？试试又不会怀孕，而且你会有眼前一亮的感觉。任何语言都是在进化的，特别是前端发展那么快。\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./2016-front-end-primer.md?vue&type=template&id=2d6591c8&\"\nimport script from \"./2016-front-end-primer.md?vue&type=script&lang=js&\"\nexport * from \"./2016-front-end-primer.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./2016-front-end-primer.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./2016-front-end-primer.md?vue&type=script&lang=js&\""],"sourceRoot":""}