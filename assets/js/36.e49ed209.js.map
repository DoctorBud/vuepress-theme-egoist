{"version":3,"sources":["webpack:///source/_posts/node-js-module-style-guide.md","webpack:///./source/_posts/node-js-module-style-guide.md?c5fe","webpack:///./source/_posts/node-js-module-style-guide.md","webpack:///./source/_posts/node-js-module-style-guide.md?aa95"],"names":[],"mappings":"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","file":"assets/js/36.e49ed209.js","sourcesContent":["<template>\n<div class=\"content\"><p>JavaScript 代码一向的特点就是难以维护，保持一个良好的代码、组织风格有助于提升效率、重构代码、添加新功能、单元测试等等。</p>\n<p>我总结了一下写了 200 个 NPM package 之后的一些个人经验和习惯。</p>\n<h2 id=\"初始化一个项目\"><a class=\"header-anchor\" href=\"#初始化一个项目\" aria-hidden=\"true\">#</a> <span>初始化一个项目</span></h2>\n<p>不再使用 <code>npm init</code>。因为除了 <code>package.json</code> 还有一些额外的配置文件，比如 <code>circle.yml</code>、<code>.editorconfig</code>、<code>LICENSE</code> 、<code>README.md</code> 等等。</p>\n<p>使用 <a href=\"http://yeoman.io\" target=\"_blank\" rel=\"noopener noreferrer\">yeoman<OutboundLink/></a>。如果你喜欢在代码中使用分号和用 travis 来测试，推荐 <a href=\"https://github.com/sindresorhus\" target=\"_blank\" rel=\"noopener noreferrer\">sindresorhus<OutboundLink/></a> 用的 <a href=\"https://github.com/sindresorhus/generator-nm\" target=\"_blank\" rel=\"noopener noreferrer\">generator-nm<OutboundLink/></a>。如果你不喜欢分号并且用 circle 来测试，推荐我用的 <a href=\"https://github.com/egoist/generator-esnm\" target=\"_blank\" rel=\"noopener noreferrer\">generator-esnm<OutboundLink/></a>。</p>\n<p>想要定制你的 README.md ? <a href=\"https://github.com/IonicaBizau/blah\" target=\"_blank\" rel=\"noopener noreferrer\">blah<OutboundLink/></a> 可以为你定制生成 README.md 以及更多提升效率的功能。</p>\n<h2 id=\"注释\"><a class=\"header-anchor\" href=\"#注释\" aria-hidden=\"true\">#</a> <span>注释</span></h2>\n<p>每一个具有单独意义的代码片段前都推荐写注释，就算再简单的代码你隔几天看也不可能一秒看出它在干什么，而有了注释就可以。对于复杂且意义重大的代码尽量写完整的 jsdoc 来说明。</p>\n<p>另一个原因就是这样可以让你的代码显得更格式化，代码挤在一堆很傻且不美观。而且你也可以自动从你代码的 jsdoc 生成 api doc！</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">/**\t\n * Module dependencies\n */</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/**\n * Reverse array but not change itself\n *\n * @param {Array} names\n * @return {Array}\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rev</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> names<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"编写可复用模块\"><a class=\"header-anchor\" href=\"#编写可复用模块\" aria-hidden=\"true\">#</a> <span>编写可复用模块</span></h2>\n<p>对于一个项目中多次使用（&gt;1）的代码，推荐放入单独的文件作为模块使用。<br>\n对于更为通用的代码尽量打包进一个单独的 npm module 来使用。</p>\n<h2 id=\"代码风格指南\"><a class=\"header-anchor\" href=\"#代码风格指南\" aria-hidden=\"true\">#</a> <span>代码风格指南</span></h2>\n<p>对于分号的问题不作讨论，加不加都行。</p>\n<p>对于异步代码，尽量不要使用 callback 而是改成 Promise，并且把 HTTP 请求封装进单独的模块，这样更方便配合 <a href=\"https://github.com/tj/co\" target=\"_blank\" rel=\"noopener noreferrer\">co<OutboundLink/></a> 来使用。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// fetchData.js</span>\n<span class=\"token comment\">// 老式回调风格</span>\n<span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'superagent'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\trequest\n\t\t<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxx.json'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// app.js</span>\n<span class=\"token comment\">// 调用它</span>\n<span class=\"token keyword\">const</span> fetchData <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./fetchData'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// fetchData.js</span>\n<span class=\"token comment\">// 无阻塞同步代码风格</span>\n<span class=\"token keyword\">const</span> fetch <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node-fetch'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> co<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxx.json'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> data\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// app.js</span>\n<span class=\"token comment\">// 调用它</span>\n<span class=\"token keyword\">const</span> fetchData <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./fetchData'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> co<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>还使用 co? 不是有 async/await 吗?</strong></p>\n<p>在 async/await 没被 v8 引擎实现之前用 co 都还是第一选择，除非某些情况你使用了 babel 那你可以考虑使用 async/await。不过即使现在用 co 在将来 async/await api 被实现的时候也能轻松地迁移过去。</p>\n<blockquote>\n<p>co is a stepping stone towards ES7 async/await -- TJ Holowaychuk</p>\n</blockquote>\n<h2 id=\"eslint\"><a class=\"header-anchor\" href=\"#eslint\" aria-hidden=\"true\">#</a> <span>ESLint</span></h2>\n<p>保持良好代码风格的方法之一就是 lint 你的代码，选择你习惯的代码风格，用编辑器实时 lint 或者添加一些 git hook 在 commit 的时候 lint 也可以。</p>\n<p>我目前使用 <a href=\"https://github.com/sindresorhus/xo\" target=\"_blank\" rel=\"noopener noreferrer\">xo<OutboundLink/></a> 来检测代码，它默认无需配置但你可以根据你的喜好调整，基于 ESLint 。如果你喜欢这个风格也可以直接在 ESlint 中使用它的<a href=\"https://github.com/sindresorhus/eslint-config-xo\" target=\"_blank\" rel=\"noopener noreferrer\">配置文件<OutboundLink/></a>。</p>\n<h2 id=\"测试\"><a class=\"header-anchor\" href=\"#测试\" aria-hidden=\"true\">#</a> <span>测试</span></h2>\n<p>写测试是很有趣的，当且仅当你用 <a href=\"https://github.com/sindresorhus/ava\" target=\"_blank\" rel=\"noopener noreferrer\">AVA<OutboundLink/></a> 的时候。</p>\n<p><img src=\"https://camo.githubusercontent.com/fc55513ee5cb412b2b0d1540032b602ed0142dbe/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f6176612f666531636561316361336432633835313863306363333965633862653539326265616239303535382f6d656469612f6c6f676f2e737667\" alt=\"ava\"></p>\n<p>我使用 AVA 的主要原因是:</p>\n<ul>\n<li>很快</li>\n<li>语法简洁</li>\n<li>内置 ES2015/2016</li>\n<li>many more...</li>\n</ul>\n<h2 id=\"commit-风格\"><a class=\"header-anchor\" href=\"#commit-风格\" aria-hidden=\"true\">#</a> <span>Commit</span> 风格</h2>\n<p>不使用没有意义的 Commit 信息，比如单纯只写个 <code>fix</code>、<code>update</code>、<code>change</code>。</p>\n<p>尽量描述你干了什么事:</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"fix tweak on ie9\"</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"release 0.0.1\"</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"refactor to use es2015\"</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"🔥\"</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>更好的做法是使用 <a href=\"https://github.com/commitizen/cz-cli\" target=\"_blank\" rel=\"noopener noreferrer\">commitizen<OutboundLink/></a> 来规范你的 commit message 格式。</p>\n<p><img src=\"https://github.com/commitizen/cz-cli/raw/master/meta/screenshots/add-commit.png\" alt=\"commitizen\"></p>\n<h2 id=\"semantic-release\"><a class=\"header-anchor\" href=\"#semantic-release\" aria-hidden=\"true\">#</a> <span>Semantic-Release</span></h2>\n<p>发布 NPM 模块是很让人困扰的一步，你需要手动 bump version，需要执行 <code>npm test</code> 来看是否有错，然后再手动执行 <code>npm publish</code>，这些步骤可以被规范且自动化。</p>\n<p>使用 <a href=\"https://github.com/semantic-release/semantic-release\" target=\"_blank\" rel=\"noopener noreferrer\">semantic-release<OutboundLink/></a> 可以自动分析你的 commit message 然后根据这些推测你的代码改动来进行语义化的版本号升级并自动更新 changelog，<a href=\"https://github.com/egoist/tooling/releases\" target=\"_blank\" rel=\"noopener noreferrer\">这些<OutboundLink/></a> 就是自动生成的。</p>\n<h2 id=\"_2016\"><a class=\"header-anchor\" href=\"#_2016\" aria-hidden=\"true\">#</a> <span>2016</span></h2>\n<p>200 more modules? Exciting! ✨</p>\n</div>\n</template>\n<script>export default { props: ['target'] }</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('p',[_vm._v(\"JavaScript 代码一向的特点就是难以维护，保持一个良好的代码、组织风格有助于提升效率、重构代码、添加新功能、单元测试等等。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我总结了一下写了 200 个 NPM package 之后的一些个人经验和习惯。\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',[_vm._v(\"使用 \"),_c('a',{attrs:{\"href\":\"http://yeoman.io\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"yeoman\"),_c('OutboundLink')],1),_vm._v(\"。如果你喜欢在代码中使用分号和用 travis 来测试，推荐 \"),_c('a',{attrs:{\"href\":\"https://github.com/sindresorhus\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"sindresorhus\"),_c('OutboundLink')],1),_vm._v(\" 用的 \"),_c('a',{attrs:{\"href\":\"https://github.com/sindresorhus/generator-nm\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"generator-nm\"),_c('OutboundLink')],1),_vm._v(\"。如果你不喜欢分号并且用 circle 来测试，推荐我用的 \"),_c('a',{attrs:{\"href\":\"https://github.com/egoist/generator-esnm\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"generator-esnm\"),_c('OutboundLink')],1),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"想要定制你的 README.md ? \"),_c('a',{attrs:{\"href\":\"https://github.com/IonicaBizau/blah\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"blah\"),_c('OutboundLink')],1),_vm._v(\" 可以为你定制生成 README.md 以及更多提升效率的功能。\")]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',[_vm._v(\"每一个具有单独意义的代码片段前都推荐写注释，就算再简单的代码你隔几天看也不可能一秒看出它在干什么，而有了注释就可以。对于复杂且意义重大的代码尽量写完整的 jsdoc 来说明。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"另一个原因就是这样可以让你的代码显得更格式化，代码挤在一堆很傻且不美观。而且你也可以自动从你代码的 jsdoc 生成 api doc！\")]),_vm._v(\" \"),_vm._m(3),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('p',[_vm._v(\"对于分号的问题不作讨论，加不加都行。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于异步代码，尽量不要使用 callback 而是改成 Promise，并且把 HTTP 请求封装进单独的模块，这样更方便配合 \"),_c('a',{attrs:{\"href\":\"https://github.com/tj/co\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"co\"),_c('OutboundLink')],1),_vm._v(\" 来使用。\")]),_vm._v(\" \"),_vm._m(7),_vm._m(8),_vm._v(\" \"),_c('p',[_vm._v(\"在 async/await 没被 v8 引擎实现之前用 co 都还是第一选择，除非某些情况你使用了 babel 那你可以考虑使用 async/await。不过即使现在用 co 在将来 async/await api 被实现的时候也能轻松地迁移过去。\")]),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_c('p',[_vm._v(\"保持良好代码风格的方法之一就是 lint 你的代码，选择你习惯的代码风格，用编辑器实时 lint 或者添加一些 git hook 在 commit 的时候 lint 也可以。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我目前使用 \"),_c('a',{attrs:{\"href\":\"https://github.com/sindresorhus/xo\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"xo\"),_c('OutboundLink')],1),_vm._v(\" 来检测代码，它默认无需配置但你可以根据你的喜好调整，基于 ESLint 。如果你喜欢这个风格也可以直接在 ESlint 中使用它的\"),_c('a',{attrs:{\"href\":\"https://github.com/sindresorhus/eslint-config-xo\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"配置文件\"),_c('OutboundLink')],1),_vm._v(\"。\")]),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_c('p',[_vm._v(\"写测试是很有趣的，当且仅当你用 \"),_c('a',{attrs:{\"href\":\"https://github.com/sindresorhus/ava\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"AVA\"),_c('OutboundLink')],1),_vm._v(\" 的时候。\")]),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_c('p',[_vm._v(\"我使用 AVA 的主要原因是:\")]),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_c('p',[_vm._v(\"尽量描述你干了什么事:\")]),_vm._v(\" \"),_vm._m(16),_c('p',[_vm._v(\"更好的做法是使用 \"),_c('a',{attrs:{\"href\":\"https://github.com/commitizen/cz-cli\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"commitizen\"),_c('OutboundLink')],1),_vm._v(\" 来规范你的 commit message 格式。\")]),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_c('p',[_vm._v(\"使用 \"),_c('a',{attrs:{\"href\":\"https://github.com/semantic-release/semantic-release\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"semantic-release\"),_c('OutboundLink')],1),_vm._v(\" 可以自动分析你的 commit message 然后根据这些推测你的代码改动来进行语义化的版本号升级并自动更新 changelog，\"),_c('a',{attrs:{\"href\":\"https://github.com/egoist/tooling/releases\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"这些\"),_c('OutboundLink')],1),_vm._v(\" 就是自动生成的。\")]),_vm._v(\" \"),_vm._m(20),_vm._v(\" \"),_c('p',[_vm._v(\"200 more modules? Exciting! ✨\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"初始化一个项目\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#初始化一个项目\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"初始化一个项目\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"不再使用 \"),_c('code',[_vm._v(\"npm init\")]),_vm._v(\"。因为除了 \"),_c('code',[_vm._v(\"package.json\")]),_vm._v(\" 还有一些额外的配置文件，比如 \"),_c('code',[_vm._v(\"circle.yml\")]),_vm._v(\"、\"),_c('code',[_vm._v(\".editorconfig\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"LICENSE\")]),_vm._v(\" 、\"),_c('code',[_vm._v(\"README.md\")]),_vm._v(\" 等等。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"注释\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#注释\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"注释\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"/**\\t\\n * Module dependencies\\n */\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" path \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'path'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"/**\\n * Reverse array but not change itself\\n *\\n * @param {Array} names\\n * @return {Array}\\n */\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"rev\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"names\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" names\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"concat\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"reverse\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"编写可复用模块\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#编写可复用模块\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"编写可复用模块\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"对于一个项目中多次使用（>1）的代码，推荐放入单独的文件作为模块使用。\"),_c('br'),_vm._v(\"\\n对于更为通用的代码尽量打包进一个单独的 npm module 来使用。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"代码风格指南\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#代码风格指南\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"代码风格指南\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// fetchData.js\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 老式回调风格\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" request \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'superagent'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\nmodule\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"exports\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"callback\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\trequest\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"get\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'xxx.json'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"end\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"err\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" res\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"callback\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"res\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// app.js\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 调用它\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" fetchData \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'./fetchData'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\nmodule\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"exports\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"fetchData\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"data \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\tconsole\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"data\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// fetchData.js\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 无阻塞同步代码风格\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" fetch \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'node-fetch'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\nmodule\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"exports \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" co\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"wrap\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" data \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"yield\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"fetch\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'xxx.json'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"then\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"data \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" data\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"json\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" data\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// app.js\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 调用它\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" fetchData \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"require\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'./fetchData'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\nmodule\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"exports \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" co\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"wrap\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" data \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"yield\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"fetchData\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\\tconsole\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"data\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"还使用 co? 不是有 async/await 吗?\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"co is a stepping stone towards ES7 async/await -- TJ Holowaychuk\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"eslint\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#eslint\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"ESLint\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"测试\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#测试\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"测试\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://camo.githubusercontent.com/fc55513ee5cb412b2b0d1540032b602ed0142dbe/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f6176612f666531636561316361336432633835313863306363333965633862653539326265616239303535382f6d656469612f6c6f676f2e737667\",\"alt\":\"ava\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"很快\")]),_vm._v(\" \"),_c('li',[_vm._v(\"语法简洁\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内置 ES2015/2016\")]),_vm._v(\" \"),_c('li',[_vm._v(\"many more...\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"commit-风格\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#commit-风格\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Commit\")]),_vm._v(\" 风格\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"不使用没有意义的 Commit 信息，比如单纯只写个 \"),_c('code',[_vm._v(\"fix\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"update\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"change\")]),_vm._v(\"。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"fix tweak on ie9\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"release 0.0.1\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"refactor to use es2015\\\"\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"🔥\\\"\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://github.com/commitizen/cz-cli/raw/master/meta/screenshots/add-commit.png\",\"alt\":\"commitizen\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"semantic-release\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#semantic-release\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Semantic-Release\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"发布 NPM 模块是很让人困扰的一步，你需要手动 bump version，需要执行 \"),_c('code',[_vm._v(\"npm test\")]),_vm._v(\" 来看是否有错，然后再手动执行 \"),_c('code',[_vm._v(\"npm publish\")]),_vm._v(\"，这些步骤可以被规范且自动化。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"_2016\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_2016\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('span',[_vm._v(\"2016\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./node-js-module-style-guide.md?vue&type=template&id=15940ac7&\"\nimport script from \"./node-js-module-style-guide.md?vue&type=script&lang=js&\"\nexport * from \"./node-js-module-style-guide.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./node-js-module-style-guide.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--3-0!../../../../node_modules/babel-loader/lib/index.js??ref--3-1!../../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../@vuepress/core/lib/webpack/markdownLoader.js??ref--1-2!./node-js-module-style-guide.md?vue&type=script&lang=js&\""],"sourceRoot":""}